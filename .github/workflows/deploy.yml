name: CI/CD

on:
  push:
    branches: [main, prod]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/prod'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm run cleanup-lovable
      - run: npm run format
      - run: npm run lint
      - run: npm test

  build:
    needs: [test]
    # run build only if previous jobs succeeded
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm run cleanup-lovable
      - run: npm run format
      - run: npm run lint
      - run: npm run sitemap
      - run: npm run build
      - name: Upload build artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist

  # deploy-preview:
  #   needs: build
  #   if: github.event_name == 'pull_request'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #         cache: 'npm'
  #     - run: npm ci
  #     - run: npm run cleanup-lovable
  #     - name: Pull Vercel Environment
  #       run: npx vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
  #       env:
  #         VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  #         VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  #     - name: Build with Vercel
  #       run: npx vercel build --token=${{ secrets.VERCEL_TOKEN }}
  #       env:
  #         VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  #         VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  #     - name: Deploy to Vercel
  #       id: deploy
  #       run: |
  #         npx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
  #         url=$(cat deployment-url.txt)
  #         echo "url=$url" >> $GITHUB_OUTPUT
  #       env:
  #         VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  #         VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  #     - name: Comment preview URL
  #       uses: marocchino/sticky-pull-request-comment@v2
  #       with:
  #         message: |
  #           Vercel Preview URL: ${{ steps.deploy.outputs.url }}

  # deploy-production:
  #   needs: build
  #   if: github.ref == 'refs/heads/prod' && github.event_name == 'push'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #         cache: 'npm'
  #     - run: npm ci
  #     - run: npm run cleanup-lovable
  #     - name: Pull Vercel Environment
  #       run: npx vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
  #       env:
  #         VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  #         VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  #     - name: Build with Vercel (production)
  #       run: npx vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
  #       env:
  #         VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  #         VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  #     - name: Deploy to Vercel (production)
  #       run: npx vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
  #       env:
  #         VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  #         VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
